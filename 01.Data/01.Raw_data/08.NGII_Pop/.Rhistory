# 사용할 필요 컬럼만 가져오기 + 민원종별 3종 가져오기
# : id, nm_k_cf, k_gid(다사39bb11ab), y_m_reg_mw(201801), h_reg_mw, d_reg_mw, h_ran, in_out
# : 3종(c_m_mw==1)과 필요컬럼 선택
mw_select <- mw[mw$certi_mag == 1, c("uni_id", "nm_k_cf", "k_char", "k_gid", "d_reg_mw",
"ym_reg_mw", "h_reg_mw", "dist_g", "in_out", "h_ran")]
# 무인민원발급기 특성 "기타"(kiosk_etc)제외 ("기타"는 일반시민이 접근할 수 없는 곳에 있는 사업장용임)
# : k_char '기타' 제외 #312730 (5480 축소)  318213-312730 3개 사업장 발급기
mw_select_2 <- mw_select[mw_select$k_char != kiosk_etc,]
rm(mw, mw_select)
# 무인발급기 이용 주중(월~금) 발급한 것만 사용
# : d_reg_mw 이 월~금 (주중)
mw_WD_by_kgid <- mw_select_2 %>%
filter(d_reg_mw %in% wkdays) %>%
group_by(k_gid, ym_reg_mw, h_reg_mw) %>%
summarize(cnt_mw3 = n())
rm(mw_select_2)
frm_wd_dt <- expand.grid(TIME=c(09:17), STD_YM=c(1:12), WK=c("WD"), k_gid=unique(mw_WD_by_kgid$k_gid))
#str(frm_wd_dt)
frm_wd_dt$TIME <- str_pad(frm_wd_dt$TIME, 2, side="left", pad="0")  # 시간대를 두 자리로
frm_wd_dt$STD_YM <- paste("2018", str_pad(frm_wd_dt$STD_YM, 2,
side = "left", pad="0"), sep = "") # 월(STD_YM)을 2018_** 로
#순서 정리
frm_wd_dt <- frm_wd_dt[,c("k_gid", "STD_YM", "WK", "TIME")]
gg <- read.csv('C:\\19project\\07.UCK\\01.Data\\02.Use_Data\\GID_ID.csv', stringsAsFactors = FALSE)
gids <- unique(gg$gid)
frm <- expand.grid(TIME=c(09:17), STD_YM=c(1:12), WK=c("WD"), k_gid=gids)
frm$TIME <- str_pad(frm$TIME, 2, side="left", pad="0")
frm$STD_YM <- paste("2018", str_pad(frm$STD_YM, 2, side = "left", pad="0"), sep = "")
frm <- frm[,c("k_gid", "STD_YM", "WK", "TIME")]
f_mw_WD_by_kgid <- left_join(frm_wd_dt, mw_WD_by_kgid, by=c("k_gid", "STD_YM"="ym_reg_mw", "TIME"="h_reg_mw"))
#head(f_mw_WD_by_kgid, 25) #4104 * 5
f_mw_WD_by_kgid$cnt_mw3 <- na_replace(f_mw_WD_by_kgid$cnt_mw3, 0)
sum(f_mw_WD_by_kgid$cnt_mw3) #267066 주중, 9시~18시(09-17) 까지 건수
rm(frm_wd_dt, mw_WD_by_kgid)
#040101 Load pop_STD_YM_INDEX_ID_TIME_WKDY.RData
load('C:\\19project\\07.UCK\\01.Data\\03.Data_Preprocessing\\05.Service_Pop\\pop_STD_YM_INDEX_ID_TIME_WKDY.RData')  #5474176 * 7 : pop_STD_YM_INDEX_ID_TIME_WKDY
#040102 Join f_mw + pop
f_mw_WD_by_kgid_pop <- left_join(f_mw_WD_by_kgid, pop_STD_YM_INDEX_ID_TIME_WKDY,
by=c("k_gid"="INDEX_ID", "WK"="CD_WK", "STD_YM", "TIME"))
#나중엘 위해 NA 는 0 으로
f_mw_WD_by_kgid_pop$H <- na_replace(f_mw_WD_by_kgid_pop$H, 0)
f_mw_WD_by_kgid_pop$W <- na_replace(f_mw_WD_by_kgid_pop$W, 0)
f_mw_WD_by_kgid_pop$V <- na_replace(f_mw_WD_by_kgid_pop$V, 0)
rm(f_mw_WD_by_kgid)
#0402 Join f_full + pop
f_pop <- left_join(frm, pop_STD_YM_INDEX_ID_TIME_WKDY,
by=c("k_gid"="INDEX_ID", "WK"="CD_WK", "STD_YM", "TIME"))
#sum(is.na(f_pop$H)) #119803
#sum(is.na(f_pop$W))
#sum(is.na(f_pop$V))
f_pop$H <- na_replace(f_pop$H, 0)
f_pop$W <- na_replace(f_pop$W, 0)
f_pop$V <- na_replace(f_pop$V, 0)
rm(frm, pop_STD_YM_INDEX_ID_TIME_WKDY)
#05. frm + JYD_800m 주용도코드 800m 인근----
#0501 Load jyd cd
load('C:\\19project\\07.UCK\\01.Data\\05.Modeling\\jyd_cd_800m_d.RData') #11895
#0502 Join f + jyd
f_mw_WD_by_kgid_pop_JYD <- left_join(f_mw_WD_by_kgid_pop, jyd_cd_800m_d, by=c("k_gid"="gid"))
rm(f_mw_WD_by_kgid_pop)
#0503 Join f full + jyd
f_pop_JYD <- left_join(f_pop, jyd_cd_800m_d, by=c("k_gid"="gid"))
f_pop_JYD[is.na(f_pop_JYD)] <- 0
rm(f_pop, jyd_cd_800m_d)
# 06. bus station 버스정류소 380m 내 갯수----
#0601 L jyd_pop_..._bus table
bus <- read.csv('C:\\19project\\07.UCK\\01.Data\\03.Data_Preprocessing\\06.Bus_Stop\\Bus_Stop_380m_800m_Buff_Count.csv', stringsAsFactors = FALSE)
bus <- bus[,c("gid", "BS_380")]
#0602 join f + bus
f_mw_WD_by_kgid_pop_JYD <- left_join(f_mw_WD_by_kgid_pop_JYD, bus, by=c("k_gid"="gid"))
#0603 join f full + bus
f_pop_JYD <- left_join(f_pop_JYD, bus, by=c("k_gid"="gid"))
rm(bus)
#07. frm + ssgi (L, M )----
#0701 격자별 ssgi L 대분류
ssgi_L <- read.csv('C:\\19project\\07.UCK\\01.Data\\03.Data_Preprocessing\\04.SSGI\\SSGI_Select_Area_LMS_Buff_380M\\SSGI_L_Buff_380M.csv', stringsAsFactors = FALSE)
ssgi_L[is.na(ssgi_L)] <- 0
ssgi_L$n_biz <- ssgi_L$D + ssgi_L$F + ssgi_L$L + ssgi_L$N +
ssgi_L$O + ssgi_L$P + ssgi_L$Q + ssgi_L$R + ssgi_L$S
ssgi_L$n_biz_sum <- ssgi_L$D_sum + ssgi_L$F_sum + ssgi_L$L_sum + ssgi_L$N_sum +
ssgi_L$O_sum + ssgi_L$P_sum + ssgi_L$Q_sum + ssgi_L$R_sum + ssgi_L$S_sum
# 0701_best
#Load best_L
load('C:\\19project\\07.UCK\\01.Data\\03.Data_Preprocessing\\04.SSGI\\ssgi_best_L.RData')
#07. frm + ssgi (L, M )----
#0701 격자별 ssgi L 대분류
ssgi_L <- read.csv('C:\\19project\\07.UCK\\01.Data\\03.Data_Preprocessing\\04.SSGI\\SSGI_Select_Area_LMS_Buff_380M\\SSGI_L_Buff_380M.csv', stringsAsFactors = FALSE)
ssgi_L[is.na(ssgi_L)] <- 0
ssgi_L$n_biz <- ssgi_L$D + ssgi_L$F + ssgi_L$L + ssgi_L$N +
ssgi_L$O + ssgi_L$P + ssgi_L$Q + ssgi_L$R + ssgi_L$S
View(ssgi_L)
#07. frm + ssgi (L, M )----
#0701 격자별 ssgi L 대분류
ssgi_L <- read.csv('C:\\19project\\07.UCK\\01.Data\\03.Data_Preprocessing\\04.SSGI\\SSGI_Select_Area_LMS_Buff_380M\\SSGI_L_Buff_380M.csv', stringsAsFactors = FALSE)
View(ssgi_L)
ssgi_L[is.na(ssgi_L)] <- 0
Sys.setenv(JAVA_HOME  =  'C:\\Program Files\\Java\\jre1.8.0_241')
library(readxl)
library(lubridate)
library(stringr)
library(WriteXLS)
library(hms)
library(data.table)
library(dplyr)
library(ggplot2)
library(openxlsx)
library(reshape2)
filenames <- list.files('C:\\19project\\07.UCK\\01.Data\\01.Raw_data\\05.DCB', pattern=glob2rx("*.csv"), full.names=TRUE)
df <- rbindlist(lapply(filenames, fread, encoding = 'unknown'))
df$uni_id <- str_trim(df$uni_id, side = c("both"))
df$center <- str_trim(df$center, side = c("both"))
df$dt_mw <- str_trim(df$dt_mw, side = c("both"))
df$hr_mw <- str_trim(df$hr_mw, side = c("both"))
df$cd_dngcho <- str_trim(df$cd_dngcho, side = c("both"))
df$cd_issue <- str_trim(df$cd_issue, side = c("both"))
df$cd_koreng <- str_trim(df$cd_koreng, side = c("both"))
df$cd_prvpub <- str_trim(df$cd_prvpub, side = c("both"))
df$cd_reciev <- str_trim(df$cd_reciev, side = c("both"))
df$sex_apl <- str_trim(df$sex_apl, side = c("both"))
df$age_apl <- str_trim(df$age_apl, side = c("both"))
df$add_apl <- str_trim(df$add_apl, side = c("both"))
df$nm_svr <- str_trim(df$nm_svr, side = c("both"))
write.csv(df, 'C:\\19project\\07.UCK\\01.Data\\02.Use_Data\\DCB_Raw.csv', row.names = FALSE)
rm(df)
df <- read.csv('C:\\19project\\07.UCK\\01.Data\\02.Use_Data\\DCB_Raw.csv', stringsAsFactor = FALSE)
df$dt_mw <- ymd(df$dt_mw)
df$hr_mw <- str_pad(df$hr_mw, 6, side = 'left', pad = '0')
df$hr_mw <- sapply(df$hr_mw, function(x)
paste(str_sub(x, -6, -5),
str_sub(x, -4, -3),
str_sub(x, -2),
sep = ':'),
USE.NAMES = FALSE
)
df$y_reg_mw <- year(df$dt_mw)
df$m_reg_mw <- month(df$dt_mw)
df$m_reg_mw <- str_pad(df$m_reg_mw, 2, side = 'left', pad = '0')
df$ym_reg_mw <- paste(df$y_reg_mw, df$m_reg_mw, sep = '')
df$h_reg_mw <- str_sub(df$hr_mw, 1,2)
df$d_reg_mw <- lubridate::wday(df$dt_mw, label = TRUE, abbr = FALSE)
df$d_reg_mw <- as.character(df$d_reg_mw)
prepro <- read.csv('C:\\19project\\07.UCK\\01.Data\\04.Setting_data\\03.DCB\\01.Preprocessing\\h_ran_nm.csv', header = FALSE, stringsAsFactors = FALSE)
df$h_ran <- ifelse(df$h_reg_mw >= '09' & df$h_reg_mw < '18', prepro[, 1][1],
ifelse(df$h_reg_mw >= '18' & df$h_reg_mw <= '23', prepro[, 1][2],
ifelse(df$h_reg_mw >= '00' & df$h_reg_mw < '05', prepro[, 1][3], prepro[, 1][4]
)))
prepro_age <- read.csv('C:\\19project\\07.UCK\\01.Data\\04.Setting_data\\03.DCB\\01.Preprocessing\\age_ran_nm.csv', header = FALSE, stringsAsFactors = FALSE)
df$age_apl <- as.integer(df$age_apl)
df$age_ran <- NA
idx <- which(df$age_apl < 20)
df$age_ran[idx] <- prepro_age[, 1][1]
rm(idx)
idx <- which(df$age_apl < 30 & df$age_apl >= 20)
df$age_ran[idx] <- prepro_age[, 1][2]
rm(idx)
idx <- which(df$age_apl < 40 & df$age_apl >= 30)
df$age_ran[idx] <- prepro_age[, 1][3]
rm(idx)
idx <- which(df$age_apl < 50 & df$age_apl >= 40)
df$age_ran[idx] <- prepro_age[, 1][4]
rm(idx)
idx <- which(df$age_apl < 60 & df$age_apl >= 50)
df$age_ran[idx] <- prepro_age[, 1][5]
rm(idx)
idx <- which(df$age_apl < 70 & df$age_apl >= 60)
df$age_ran[idx] <- prepro_age[, 1][6]
rm(idx)
idx <- which(df$age_apl < 80 & df$age_apl >= 70)
df$age_ran[idx] <- prepro_age[, 1][7]
rm(idx)
idx <- which(df$age_apl < 90 & df$age_apl >= 80)
df$age_ran[idx] <- prepro_age[, 1][8]
rm(idx)
idx <- which(df$age_apl < 100 & df$age_apl >= 90)
df$age_ran[idx] <- prepro_age[, 1][9]
rm(idx)
idx <- which(df$age_apl >= 100)
df$age_ran[idx] <- prepro_age[, 1][10]
rm(idx)
prepro_day <- read.csv('C:\\19project\\07.UCK\\01.Data\\04.Setting_data\\03.DCB\\01.Preprocessing\\jj_day_nm.csv', header = FALSE, stringsAsFactors = FALSE)
df$jj <- ifelse((df$d_reg_mw == prepro_day[, 1][1])|(df$d_reg_mw == prepro_day[, 1][2])|(df$d_reg_mw == prepro_day[, 1][3])|(df$d_reg_mw == prepro_day[, 1][4])|(df$d_reg_mw == prepro_day[, 1][5])
, prepro_day[, 1][8], prepro_day[, 1][9])
df$count <- 1
write.csv(df, 'C:\\19project\\07.UCK\\01.Data\\03.Data_Preprocessing\\03.DCB\\DCB_Data_Preprocessing.csv', row.names = FALSE, fileEncoding = 'CP949')
df <- read.csv('C:\\19project\\07.UCK\\01.Data\\03.Data_Preprocessing\\03.DCB\\DCB_Data_Preprocessing.csv', stringsAsFactors = FALSE)
prepro_nm <- read.csv('C:\\19project\\07.UCK\\01.Data\\04.Setting_data\\03.DCB\\02.EDA\\dcb_EDA_all_nm.csv', stringsAsFactors = FALSE, header = FALSE)
table_year <- data.table(table(df$y_reg_mw))
table_year <- table_year %>%
mutate(percent = (N/sum(N)))
table_year$percent <- round(table_year$percent, 2)
names(table_year) <- c(prepro_nm[,1][1], prepro_nm[,1][2], prepro_nm[,1][3])
write.xlsx(table_year,
file = "C:\\19project\\07.UCK\\03.Output\\03.DCB\\DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][1],
append = TRUE,
row.names = FALSE)
table_cate <- data.table(table(df$cd_issue))
table_cate <- table_cate %>%
mutate(percent = (N/sum(N)))
table_cate$percent <- round(table_cate$percent, 2)
names(table_cate) <- c(prepro_nm[,1][4], prepro_nm[,1][2], prepro_nm[,1][3])
write.xlsx(table_cate,
file = "C:\\19project\\07.UCK\\03.Output\\03.DCB\\DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][2],
append = TRUE,
row.names = FALSE)
table_min_year <- data.table(table(df$cd_issue, df$y_reg_mw))
table_min_year <- dcast(table_min_year, V1 ~ V2, value.var = 'N')
names(table_min_year)[1] <- c(prepro_nm[,1][4])
write.xlsx(table_min_year,
file = "C:\\19project\\07.UCK\\03.Output\\03.DCB\\DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][3],
append = TRUE,
row.names = FALSE)
table_c <- data.table(table(df$m_reg_mw, df$y_reg_mw))
table_c$V1 <- as.numeric(table_c$V1)
table_c1 <- dcast(table_c, V2 ~V1, value.var = "N")
names(table_c1)[1] <- c(prepro_nm[,1][1])
write.xlsx(table_c1,
file = "C:\\19project\\07.UCK\\03.Output\\03.DCB\\DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][4],
append = TRUE,
row.names = FALSE)
table_cd_m <- data.table(table(df$m_reg_mw, df$cd_issue))
table_cd_m$V1 <- as.numeric(table_cd_m$V1)
table_cd_m <- dcast(table_cd_m, V2 ~ V1, value.var = "N")
names(table_cd_m)[1] <- c(prepro_nm[,1][4])
write.xlsx(table_cd_m,
file = "C:\\19project\\07.UCK\\03.Output\\03.DCB\\DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][5],
append = TRUE,
row.names = FALSE)
table_age_ran <- data.table(table(df$age_ran))
table_age_ran <- table_age_ran[c(2:10, 1),]
table_age_ran <- table_age_ran %>%
mutate(percent = (N/sum(N)))
table_age_ran$percent <- round(table_age_ran$percent, 2)
colnames(table_age_ran) <- c(prepro_nm[,1][19], prepro_nm[,1][2], prepro_nm[,1][3])
write.xlsx(table_age_ran,
file = "C:\\19project\\07.UCK\\03.Output\\03.DCB\\DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][6],
append = TRUE,
row.names = FALSE)
table_age <- aggregate(age_apl ~ cd_issue, data = df, mean)
colnames(table_age) <- c(prepro_nm[,1][4], prepro_nm[,1][20])
write.xlsx(table_age,
file = "C:\\19project\\07.UCK\\03.Output\\03.DCB\\DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][7],
append = TRUE,
row.names = FALSE)
table_cd_ar <- data.table(table(df$cd_issue, df$age_ran))
table_cd_ar$V2 <- factor(table_cd_ar$V2, levels = c(prepro_nm[,1][21], prepro_nm[,1][22], prepro_nm[,1][23], prepro_nm[,1][24], prepro_nm[,1][25],
prepro_nm[,1][26], prepro_nm[,1][27], prepro_nm[,1][28], prepro_nm[,1][29], prepro_nm[,1][30]))
table_cd_ar <- dcast(table_cd_ar, V1 ~ V2, value.var = 'N')
names(table_cd_ar)[1] <- c(prepro_nm[,1][4])
write.xlsx(table_cd_ar,
file = "C:\\19project\\07.UCK\\03.Output\\03.DCB\\DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][8],
append = TRUE,
row.names = FALSE)
table_h <- data.frame(table(df$h_reg_mw))
table_h <- table_h %>%
mutate(percent = (Freq/sum(Freq)))
table_h$percent <- round(table_h$percent, 2)
names(table_h) <- c(prepro_nm[,1][5], prepro_nm[,1][2], prepro_nm[,1][3])
write.xlsx(table_h,
file = "C:\\19project\\07.UCK\\03.Output\\03.DCB\\DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][9],
append = TRUE,
row.names = FALSE)
table_h_c <- data.frame(table(df$h_reg_mw, df$cd_issue))
table_h_c <- dcast(table_h_c, Var1 ~ Var2, value.var = 'Freq')
names(table_h_c)[1] <- c(prepro_nm[,1][5])
write.xlsx(table_h_c,
file = "C:\\19project\\07.UCK\\03.Output\\03.DCB\\DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][10],
append = TRUE,
row.names = FALSE)
table_hr <- data.frame(table(df$h_ran))
table_hr <- table_hr %>%
mutate(percent = (Freq/sum(Freq)))
table_hr$percent <- round(table_hr$percent, 2)
setorder(table_hr, -Freq)
colnames(table_hr) <- c(prepro_nm[,1][6], prepro_nm[,1][2], prepro_nm[,1][3])
write.xlsx(table_hr,
file = "C:\\19project\\07.UCK\\03.Output\\03.DCB\\DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][11],
append = TRUE,
row.names = FALSE)
table_hr_c <- data.table(table(df$h_ran, df$cd_issue))
table_hr_c <- dcast(table_hr_c, V1 ~ V2, value.var = 'N')
setorder(table_hr_c, -V1)
names(table_hr_c)[1] <- c(prepro_nm[,1][6])
write.xlsx(table_hr_c,
file = "C:\\19project\\07.UCK\\03.Output\\03.DCB\\DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][12],
append = TRUE,
row.names = FALSE)
Sys.setenv(JAVA_HOME  =  'C:/Program Files/Java/jre1.8.0_241')
library(readxl)
library(lubridate)
library(stringr)
library(WriteXLS)
library(hms)
library(data.table)
library(dplyr)
library(ggplot2)
library(openxlsx)
library(reshape2)
filenames <- list.files('C:/19project/07.UCK/01.Data/01.Raw_data/05.DCB', pattern=glob2rx("*.csv"), full.names=TRUE)
df <- rbindlist(lapply(filenames, fread, encoding = 'unknown'))
df$uni_id <- str_trim(df$uni_id, side = c("both"))
df$center <- str_trim(df$center, side = c("both"))
df$dt_mw <- str_trim(df$dt_mw, side = c("both"))
df$hr_mw <- str_trim(df$hr_mw, side = c("both"))
df$cd_dngcho <- str_trim(df$cd_dngcho, side = c("both"))
df$cd_issue <- str_trim(df$cd_issue, side = c("both"))
df$cd_koreng <- str_trim(df$cd_koreng, side = c("both"))
df$cd_prvpub <- str_trim(df$cd_prvpub, side = c("both"))
df$cd_reciev <- str_trim(df$cd_reciev, side = c("both"))
df$sex_apl <- str_trim(df$sex_apl, side = c("both"))
df$age_apl <- str_trim(df$age_apl, side = c("both"))
df$add_apl <- str_trim(df$add_apl, side = c("both"))
df$nm_svr <- str_trim(df$nm_svr, side = c("both"))
write.csv(df, 'C:/19project/07.UCK/01.Data/02.Use_Data/DCB_Raw.csv', row.names = FALSE)
rm(df)
df <- read.csv('C:/19project/07.UCK/01.Data/02.Use_Data/DCB_Raw.csv', stringsAsFactor = FALSE)
df$dt_mw <- ymd(df$dt_mw)
df$hr_mw <- str_pad(df$hr_mw, 6, side = 'left', pad = '0')
df$hr_mw <- sapply(df$hr_mw, function(x)
paste(str_sub(x, -6, -5),
str_sub(x, -4, -3),
str_sub(x, -2),
sep = ':'),
USE.NAMES = FALSE
)
df$y_reg_mw <- year(df$dt_mw)
df$m_reg_mw <- month(df$dt_mw)
df$m_reg_mw <- str_pad(df$m_reg_mw, 2, side = 'left', pad = '0')
df$ym_reg_mw <- paste(df$y_reg_mw, df$m_reg_mw, sep = '')
df$h_reg_mw <- str_sub(df$hr_mw, 1,2)
df$d_reg_mw <- lubridate::wday(df$dt_mw, label = TRUE, abbr = FALSE)
df$d_reg_mw <- as.character(df$d_reg_mw)
prepro <- read.csv('C:/19project/07.UCK/01.Data/04.Setting_data/03.DCB/01.Preprocessing/h_ran_nm.csv', header = FALSE, stringsAsFactors = FALSE)
df$h_ran <- ifelse(df$h_reg_mw >= '09' & df$h_reg_mw < '18', prepro[, 1][1],
ifelse(df$h_reg_mw >= '18' & df$h_reg_mw <= '23', prepro[, 1][2],
ifelse(df$h_reg_mw >= '00' & df$h_reg_mw < '05', prepro[, 1][3], prepro[, 1][4]
)))
prepro_age <- read.csv('C:/19project/07.UCK/01.Data/04.Setting_data/03.DCB/01.Preprocessing/age_ran_nm.csv', header = FALSE, stringsAsFactors = FALSE)
df$age_apl <- as.integer(df$age_apl)
df$age_ran <- NA
idx <- which(df$age_apl < 20)
df$age_ran[idx] <- prepro_age[, 1][1]
rm(idx)
idx <- which(df$age_apl < 30 & df$age_apl >= 20)
df$age_ran[idx] <- prepro_age[, 1][2]
rm(idx)
idx <- which(df$age_apl < 40 & df$age_apl >= 30)
df$age_ran[idx] <- prepro_age[, 1][3]
rm(idx)
idx <- which(df$age_apl < 50 & df$age_apl >= 40)
df$age_ran[idx] <- prepro_age[, 1][4]
rm(idx)
idx <- which(df$age_apl < 60 & df$age_apl >= 50)
df$age_ran[idx] <- prepro_age[, 1][5]
rm(idx)
idx <- which(df$age_apl < 70 & df$age_apl >= 60)
df$age_ran[idx] <- prepro_age[, 1][6]
rm(idx)
idx <- which(df$age_apl < 80 & df$age_apl >= 70)
df$age_ran[idx] <- prepro_age[, 1][7]
rm(idx)
idx <- which(df$age_apl < 90 & df$age_apl >= 80)
df$age_ran[idx] <- prepro_age[, 1][8]
rm(idx)
idx <- which(df$age_apl < 100 & df$age_apl >= 90)
df$age_ran[idx] <- prepro_age[, 1][9]
rm(idx)
idx <- which(df$age_apl >= 100)
df$age_ran[idx] <- prepro_age[, 1][10]
rm(idx)
prepro_day <- read.csv('C:/19project/07.UCK/01.Data/04.Setting_data/03.DCB/01.Preprocessing/jj_day_nm.csv', header = FALSE, stringsAsFactors = FALSE)
df$jj <- ifelse((df$d_reg_mw == prepro_day[, 1][1])|(df$d_reg_mw == prepro_day[, 1][2])|(df$d_reg_mw == prepro_day[, 1][3])|(df$d_reg_mw == prepro_day[, 1][4])|(df$d_reg_mw == prepro_day[, 1][5])
, prepro_day[, 1][8], prepro_day[, 1][9])
df$count <- 1
write.csv(df, 'C:/19project/07.UCK/01.Data/03.Data_Preprocessing/03.DCB/DCB_Data_Preprocessing.csv', row.names = FALSE, fileEncoding = 'CP949')
df <- read.csv('C:/19project/07.UCK/01.Data/03.Data_Preprocessing/03.DCB/DCB_Data_Preprocessing.csv', stringsAsFactors = FALSE)
prepro_nm <- read.csv('C:/19project/07.UCK/01.Data/04.Setting_data/03.DCB/02.EDA/dcb_EDA_all_nm.csv', stringsAsFactors = FALSE, header = FALSE)
table_year <- data.table(table(df$y_reg_mw))
table_year <- table_year %>%
mutate(percent = (N/sum(N)))
table_year$percent <- round(table_year$percent, 2)
names(table_year) <- c(prepro_nm[,1][1], prepro_nm[,1][2], prepro_nm[,1][3])
write.xlsx(table_year,
file = "C:/19project/07.UCK/03.Output/03.DCB/DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][1],
append = TRUE,
row.names = FALSE)
table_cate <- data.table(table(df$cd_issue))
table_cate <- table_cate %>%
mutate(percent = (N/sum(N)))
table_cate$percent <- round(table_cate$percent, 2)
names(table_cate) <- c(prepro_nm[,1][4], prepro_nm[,1][2], prepro_nm[,1][3])
write.xlsx(table_cate,
file = "C:/19project/07.UCK/03.Output/03.DCB/DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][2],
append = TRUE,
row.names = FALSE)
table_min_year <- data.table(table(df$cd_issue, df$y_reg_mw))
table_min_year <- dcast(table_min_year, V1 ~ V2, value.var = 'N')
names(table_min_year)[1] <- c(prepro_nm[,1][4])
write.xlsx(table_min_year,
file = "C:/19project/07.UCK/03.Output/03.DCB/DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][3],
append = TRUE,
row.names = FALSE)
table_c <- data.table(table(df$m_reg_mw, df$y_reg_mw))
table_c$V1 <- as.numeric(table_c$V1)
table_c1 <- dcast(table_c, V2 ~V1, value.var = "N")
names(table_c1)[1] <- c(prepro_nm[,1][1])
write.xlsx(table_c1,
file = "C:/19project/07.UCK/03.Output/03.DCB/DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][4],
append = TRUE,
row.names = FALSE)
table_cd_m <- data.table(table(df$m_reg_mw, df$cd_issue))
table_cd_m$V1 <- as.numeric(table_cd_m$V1)
table_cd_m <- dcast(table_cd_m, V2 ~ V1, value.var = "N")
names(table_cd_m)[1] <- c(prepro_nm[,1][4])
write.xlsx(table_cd_m,
file = "C:/19project/07.UCK/03.Output/03.DCB/DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][5],
append = TRUE,
row.names = FALSE)
table_age_ran <- data.table(table(df$age_ran))
table_age_ran <- table_age_ran[c(2:10, 1),]
table_age_ran <- table_age_ran %>%
mutate(percent = (N/sum(N)))
table_age_ran$percent <- round(table_age_ran$percent, 2)
colnames(table_age_ran) <- c(prepro_nm[,1][19], prepro_nm[,1][2], prepro_nm[,1][3])
write.xlsx(table_age_ran,
file = "C:/19project/07.UCK/03.Output/03.DCB/DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][6],
append = TRUE,
row.names = FALSE)
table_age <- aggregate(age_apl ~ cd_issue, data = df, mean)
colnames(table_age) <- c(prepro_nm[,1][4], prepro_nm[,1][20])
write.xlsx(table_age,
file = "C:/19project/07.UCK/03.Output/03.DCB/DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][7],
append = TRUE,
row.names = FALSE)
table_cd_ar <- data.table(table(df$cd_issue, df$age_ran))
table_cd_ar$V2 <- factor(table_cd_ar$V2, levels = c(prepro_nm[,1][21], prepro_nm[,1][22], prepro_nm[,1][23], prepro_nm[,1][24], prepro_nm[,1][25],
prepro_nm[,1][26], prepro_nm[,1][27], prepro_nm[,1][28], prepro_nm[,1][29], prepro_nm[,1][30]))
table_cd_ar <- dcast(table_cd_ar, V1 ~ V2, value.var = 'N')
names(table_cd_ar)[1] <- c(prepro_nm[,1][4])
write.xlsx(table_cd_ar,
file = "C:/19project/07.UCK/03.Output/03.DCB/DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][8],
append = TRUE,
row.names = FALSE)
table_h <- data.frame(table(df$h_reg_mw))
table_h <- table_h %>%
mutate(percent = (Freq/sum(Freq)))
table_h$percent <- round(table_h$percent, 2)
names(table_h) <- c(prepro_nm[,1][5], prepro_nm[,1][2], prepro_nm[,1][3])
write.xlsx(table_h,
file = "C:/19project/07.UCK/03.Output/03.DCB/DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][9],
append = TRUE,
row.names = FALSE)
table_h_c <- data.frame(table(df$h_reg_mw, df$cd_issue))
table_h_c <- dcast(table_h_c, Var1 ~ Var2, value.var = 'Freq')
names(table_h_c)[1] <- c(prepro_nm[,1][5])
write.xlsx(table_h_c,
file = "C:/19project/07.UCK/03.Output/03.DCB/DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][10],
append = TRUE,
row.names = FALSE)
table_hr <- data.frame(table(df$h_ran))
table_hr <- table_hr %>%
mutate(percent = (Freq/sum(Freq)))
table_hr$percent <- round(table_hr$percent, 2)
setorder(table_hr, -Freq)
colnames(table_hr) <- c(prepro_nm[,1][6], prepro_nm[,1][2], prepro_nm[,1][3])
write.xlsx(table_hr,
file = "C:/19project/07.UCK/03.Output/03.DCB/DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][11],
append = TRUE,
row.names = FALSE)
table_hr_c <- data.table(table(df$h_ran, df$cd_issue))
table_hr_c <- dcast(table_hr_c, V1 ~ V2, value.var = 'N')
setorder(table_hr_c, -V1)
names(table_hr_c)[1] <- c(prepro_nm[,1][6])
write.xlsx(table_hr_c,
file = "C:/19project/07.UCK/03.Output/03.DCB/DCB_EDA_All.xlsx",
sheetName = prepro_nm[,2][12],
append = TRUE,
row.names = FALSE)
pop_path = 'C:/19Project/07.UCK/01.Data/01.Raw_data/08.NGII_Pop/'
jyd_path = 'C:/19Project/07.UCK/01.Data/01.Raw_data/10.JYD/'
setwd(pop_path)
pop_path.files()
list.files(path = pop_path)
eld <- list.files(path = pop_path + '고령인구')
eld <- list.files(path = paste0(pop_path,'old'))
eld <- list.files(path = paste0(pop_path,'고령인구'))
eld <- list.files(path = paste0(pop_path,'고령인구'))
tot <- list.files(path = paste0(pop_path,'총인구'))
wag <- list.files(path = paste0(pop_path,'생산가능인구'))
eld
